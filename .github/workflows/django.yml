name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: "1.5.1"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - run: poetry --version
      - name: Install Dependencies
        run: |
          poetry install

      - name: Run Tests
        run: |
          poetry run python manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.IMAGE_TAG }}:latest

      - name: dockerhub login
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKERHUB_TOKEN}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Docker Push
        run: docker push ${{ secrets.IMAGE_TAG }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create private key file
        run: echo "$PRIVATE_KEY" > private-key.pem
        env:
          PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY  }}
          HOSTNAME: ${{ secrets.SSH_HOST  }}
          USER_NAME: ${{ secrets.SSH_USER  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/sociobuzzer/
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} 'cd /var/www/sociobuzzer && docker-compose pull && docker-compose up -d'